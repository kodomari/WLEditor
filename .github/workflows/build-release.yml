name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
      - 'feature/android-*'
  pull_request:
    branches:
      - main
  workflow_dispatch:  # ÊâãÂãïÂÆüË°å„ÇÇÂèØËÉΩ

env:
  Qt_VERSION: 6.5.0

jobs:
  build-linux-x64:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Qt6
      run: |
        sudo apt update
        sudo apt install -y qt6-base-dev qt6-tools-dev cmake build-essential
    
    - name: Configure and Build
      run: |
        mkdir build-release
        cd build-release
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make -j$(nproc)
    
    - name: Test build
      run: |
        cd build-release
        file wledit
        ldd wledit | grep Qt6 || echo "Qt6 check completed"
    
    - name: Create Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd build-release
        cp wledit wleditor-${{ github.ref_name }}-linux-x64
        chmod +x wleditor-${{ github.ref_name }}-linux-x64
    
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: wleditor-linux-x64
        path: build-release/wleditor-${{ github.ref_name }}-linux-x64

    - name: Upload build artifact for testing
      if: "!startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v4
      with:
        name: wleditor-linux-x64-${{ github.sha }}
        path: build-release/wledit
        retention-days: 7

  # Android builds (for future implementation)
  build-android:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'android') || contains(github.ref, 'android')
    
    strategy:
      matrix:
        android-api: [23, 34]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ matrix.android-api }}
        build-tools: 34.0.0
        ndk-version: 25.2.9519653
    
    - name: Install Qt6 for Android
      run: |
        echo "Note: Qt6 for Android setup would be implemented here"
        echo "This job demonstrates the Android build pipeline structure"
        echo "API Level: ${{ matrix.android-api }}"
    
    - name: Android Build (Placeholder)
      run: |
        echo "Android build for API ${{ matrix.android-api }} would run here"
        echo "mkdir build-android-api${{ matrix.android-api }}"
        echo "cmake with Android toolchain configuration"
        echo "make for Android targets"

  test:
    runs-on: ubuntu-latest
    needs: [build-linux-x64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: wleditor-linux-x64-${{ github.sha }}
        path: ./
      continue-on-error: true
    
    - name: Install Qt6 for testing
      run: |
        sudo apt update
        sudo apt install -y qt6-base-dev
    
    - name: Basic functionality test
      run: |
        if [ -f "wledit" ]; then
          chmod +x wledit
          echo "‚úÖ Executable found and made executable"
          
          # Test if it links correctly
          if ldd wledit | grep -q "Qt6"; then
            echo "‚úÖ Qt6 dependencies found"
          else
            echo "‚ö†Ô∏è Qt6 dependencies check"
          fi
        else
          echo "‚ÑπÔ∏è Executable not found (expected for tag builds)"
        fi
  
  create-release:
    needs: [build-linux-x64, test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          wleditor-linux-x64/*
        generate_release_notes: true
        body: |
          ## üöÄ WLEditor Release ${{ github.ref_name }}
          
          ### üì¶ Downloads
          - **Linux x64**: wleditor-${{ github.ref_name }}-linux-x64
          
          ### ‚ú® Features
          - Classic WordStar key bindings
          - Cross-platform support (Linux ready, Android in development)
          - Modern Qt6-based interface
          
          ### üîß Installation
          ```bash
          chmod +x wleditor-${{ github.ref_name }}-linux-x64
          ./wleditor-${{ github.ref_name }}-linux-x64
          ```
          
          ü§ñ Generated with automated CI/CD pipeline
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
